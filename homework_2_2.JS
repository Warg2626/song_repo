1. undefined + 1

// undefined //не може бути перетворено в число.
// undefined + 1 -> NaN //додавання з непридатним значенням
// Результат: NaN

2. 'true' == true

// 'true' //перетворюється в число NaN
// true //перетворюється в 1
// NaN == 1 -> false //порівняння чисел
// Результат: false

3. false == 'false'

// false //перетворюється в 0.
// 'false' //не може бути перетворено в число, перетворюється в NaN
// 0 == NaN -> false //порівняння чисел
// Результат: false

4. null == ''

// null //рівний лише undefined і ніякому іншому значенню.
// Результат: false

5. 3 ** (9 / 3)

// 9 / 3 -> 3 //ділення чисел
// 3 ** 3 -> 27 //піднесення до степеня
// Результат: 27

6. !!'false' == !!'true'

// !!'false' -> true //унарні оператори ! перетворюють значення в булеве
// !!'true' -> true.
// true == true -> true //порівняння булевих значень
// Результат: true

7. 0 || '0' && 1

// 0 є хибним значенням, тому || переходить до '0'
// '0' //є істинним значенням.
// '0' && 1 -> 1 //оператор && повертає останнє істинне значення
// Результат: 1

8. 1 < 2 < 3

// 1 < 2 -> true //порівняння чисел
// true < 3 -> 1 < 3 //булеве значення перетворюється в число 1
// 1 < 3 -> true //порівняння чисел
// Результат: true

9. 'foo' + + +'bar'

// +'bar' -> NaN //спроба перетворити рядок 'bar' в число
// 'foo' + NaN -> 'fooNaN' //рядок + NaN => конкатенація рядків
// Результат: 'fooNaN'

10. 3 ** 2 / 3

// 3 ** 2 -> 9 //піднесення до степеня
// 9 / 3 -> 3 //ділення чисел
// Результат: 3

11. 1 < 2 > 3

// 1 < 2 -> true //порівняння чисел
// true > 3 -> 1 > 3 //булеве значення перетворюється в число 1
// 1 > 3 -> false //порівняння чисел
// Результат: false

12. (+null == false) < 1

// +null -> 0 //перетворення null в число
// 0 == false -> true //порівняння чисел
// true < 1 -> 1 < 1 //булеве значення перетворюється в число 1
// 1 < 1 -> false //порівняння чисел
// Результат: false

13. false && true || true

// false && true -> false //оператор && повертає хибне значення
// false || true -> true //оператор || повертає істинне значення
// Результат: true

14. false && (true || true)

// true || true -> true //оператор || повертає істинне значення
// false && true -> false //оператор && повертає хибне значення
// Результат: false

15. (+null == false) < 1 ** 5

// +null -> 0 //перетворення null в число
// 0 == false -> true //порівняння чисел
// 1 ** 5 -> 1 //піднесення до степеня
// true < 1 -> 1 < 1 //булеве значення перетворюється в число 1
// 1 < 1 -> false //порівняння чисел
// Результат: false